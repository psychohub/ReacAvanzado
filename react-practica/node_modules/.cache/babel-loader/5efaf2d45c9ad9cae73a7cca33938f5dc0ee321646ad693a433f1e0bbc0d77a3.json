{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huber\\\\Documents\\\\Source\\\\Proyectos\\\\KeepCoding\\\\React_Avanzado\\\\react-practica-main\\\\react-practica\\\\src\\\\pages\\\\AdvertsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBRow } from 'mdb-react-ui-kit';\nimport AdvertItem from '../components/adverts/AdvertItem';\nimport FilterForm from '../components/filter/FilterForm';\nimport Loader from '../components/Loader';\nimport Navbar from '../components/Navbar';\nimport { getAdverts } from '../api/adverts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdvertsPage = () => {\n  _s();\n  const [adverts, setAdverts] = useState([]);\n  const [filteredAdverts, setFilteredAdverts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAdverts = async () => {\n      try {\n        const data = await getAdverts();\n        setAdverts(data);\n        setFilteredAdverts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener los anuncios:', error);\n        setLoading(false);\n      }\n    };\n    fetchAdverts();\n  }, []);\n  const handleFilterChange = newFilteredAdverts => {\n    setFilteredAdverts(newFilteredAdverts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listado de Anuncios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterForm, {\n      adverts: adverts,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : filteredAdverts.length > 0 ? /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: filteredAdverts.map(advert => /*#__PURE__*/_jsxDEV(AdvertItem, {\n        advert: advert\n      }, advert.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay anuncios disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/adverts/new\",\n        children: \"Crear un nuevo anuncio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AdvertsPage, \"04KIcx7JkseSyZkQfEsAD5nRHo0=\");\n_c = AdvertsPage;\nexport default AdvertsPage;\nvar _c;\n$RefreshReg$(_c, \"AdvertsPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","MDBRow","AdvertItem","FilterForm","Loader","Navbar","getAdverts","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvertsPage","_s","adverts","setAdverts","filteredAdverts","setFilteredAdverts","loading","setLoading","fetchAdverts","data","error","console","handleFilterChange","newFilteredAdverts","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","length","map","advert","id","to","_c","$RefreshReg$"],"sources":["C:/Users/huber/Documents/Source/Proyectos/KeepCoding/React_Avanzado/react-practica-main/react-practica/src/pages/AdvertsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBRow } from 'mdb-react-ui-kit';\nimport AdvertItem from '../components/adverts/AdvertItem';\nimport FilterForm from '../components/filter/FilterForm';\nimport Loader from '../components/Loader';\nimport Navbar from '../components/Navbar';\nimport { getAdverts } from '../api/adverts';\n\nconst AdvertsPage = () => {\n  const [adverts, setAdverts] = useState([]);\n  const [filteredAdverts, setFilteredAdverts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchAdverts = async () => {\n      try {\n        const data = await getAdverts();\n        setAdverts(data);\n        setFilteredAdverts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener los anuncios:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchAdverts();\n  }, []);\n\n  const handleFilterChange = (newFilteredAdverts) => {\n    setFilteredAdverts(newFilteredAdverts);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <h1>Listado de Anuncios</h1>\n      <FilterForm adverts={adverts} onFilterChange={handleFilterChange} />\n      {loading ? (\n        <Loader />\n      ) : filteredAdverts.length > 0 ? (\n        <MDBRow>\n          {filteredAdverts.map((advert) => (\n            <AdvertItem key={advert.id} advert={advert} />\n          ))}\n        </MDBRow>\n      ) : (\n        <div>\n          <p>No hay anuncios disponibles.</p>\n          <Link to=\"/adverts/new\">Crear un nuevo anuncio</Link>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AdvertsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMd,UAAU,CAAC,CAAC;QAC/BQ,UAAU,CAACM,IAAI,CAAC;QAChBJ,kBAAkB,CAACI,IAAI,CAAC;QACxBF,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDH,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAIC,kBAAkB,IAAK;IACjDR,kBAAkB,CAACQ,kBAAkB,CAAC;EACxC,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA,CAACL,UAAU;MAACU,OAAO,EAAEA,OAAQ;MAACiB,cAAc,EAAEP;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnEZ,OAAO,gBACNT,OAAA,CAACJ,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACRd,eAAe,CAACgB,MAAM,GAAG,CAAC,gBAC5BvB,OAAA,CAACP,MAAM;MAAAwB,QAAA,EACJV,eAAe,CAACiB,GAAG,CAAEC,MAAM,iBAC1BzB,OAAA,CAACN,UAAU;QAAiB+B,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,gBAETrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnCrB,OAAA,CAACR,IAAI;QAACmC,EAAE,EAAC,cAAc;QAAAV,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACjB,EAAA,CA9CID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}