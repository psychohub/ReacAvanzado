{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huber\\\\Documents\\\\Source\\\\Proyectos\\\\KeepCoding\\\\React_Avanzado\\\\react-practica-main\\\\react-practica\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../redux/userSlice';\nimport { routes } from '../components/routes/links';\nimport LoginForm from '../components/auth/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  var _location$state, _location$state$from;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated,\n    status,\n    error\n  } = useSelector(state => state.auth);\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || routes.adverts;\n  useEffect(() => {\n    if (isAuthenticated) {\n      console.log('User is authenticated, navigating to:', from);\n      navigate(from, {\n        replace: true\n      });\n    }\n  }, [isAuthenticated, navigate, from]);\n  const handleLogin = credentials => {\n    dispatch(login(credentials));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"a8aGwY2uucpXmkjg3GlC5MuEv20=\", false, function () {\n  return [useNavigate, useLocation, useDispatch, useSelector];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","useSelector","useDispatch","login","routes","LoginForm","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state$from","navigate","location","dispatch","isAuthenticated","status","error","state","auth","from","pathname","adverts","console","log","replace","handleLogin","credentials","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","_c","$RefreshReg$"],"sources":["C:/Users/huber/Documents/Source/Proyectos/KeepCoding/React_Avanzado/react-practica-main/react-practica/src/pages/LoginPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../redux/userSlice';\nimport { routes } from '../components/routes/links';\nimport LoginForm from '../components/auth/LoginForm';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { isAuthenticated, status, error } = useSelector((state) => state.auth);\n\n  const from = location.state?.from?.pathname || routes.adverts;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      console.log('User is authenticated, navigating to:', from);\n      navigate(from, { replace: true });\n    }\n  }, [isAuthenticated, navigate, from]);\n\n  const handleLogin = (credentials) => {\n    dispatch(login(credentials));\n  };\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <LoginForm onSubmit={handleLogin} />\n      {status === 'loading' && <div>Loading...</div>}\n      {error && <div className=\"text-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,OAAOC,SAAS,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACtB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa,eAAe;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAE7E,MAAMC,IAAI,GAAG,EAAAV,eAAA,GAAAG,QAAQ,CAACK,KAAK,cAAAR,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBU,IAAI,cAAAT,oBAAA,uBAApBA,oBAAA,CAAsBU,QAAQ,KAAIjB,MAAM,CAACkB,OAAO;EAE7DxB,SAAS,CAAC,MAAM;IACd,IAAIiB,eAAe,EAAE;MACnBQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEJ,IAAI,CAAC;MAC1DR,QAAQ,CAACQ,IAAI,EAAE;QAAEK,OAAO,EAAE;MAAK,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,CAACV,eAAe,EAAEH,QAAQ,EAAEQ,IAAI,CAAC,CAAC;EAErC,MAAMM,WAAW,GAAIC,WAAW,IAAK;IACnCb,QAAQ,CAACX,KAAK,CAACwB,WAAW,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA,CAACF,SAAS;MAAC4B,QAAQ,EAAEP;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnChB,MAAM,KAAK,SAAS,iBAAIT,OAAA;MAAAqB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7Cf,KAAK,iBAAIV,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAN,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3BID,SAAS;EAAA,QACIT,WAAW,EACXC,WAAW,EACXE,WAAW,EACeD,WAAW;AAAA;AAAAkC,EAAA,GAJlD3B,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}