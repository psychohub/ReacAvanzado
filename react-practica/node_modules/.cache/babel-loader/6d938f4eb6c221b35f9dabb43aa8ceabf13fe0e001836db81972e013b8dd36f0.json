{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { loginUser } from '../api/auth';\n\n// Async thunk to handle login\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password,\n  rememberMe\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await loginUser({\n      email,\n      password\n    });\n    const {\n      accessToken\n    } = response;\n    if (accessToken) {\n      if (rememberMe) {\n        localStorage.setItem('token', accessToken);\n      }\n      return accessToken;\n    }\n    return rejectWithValue('No access token received');\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Slice for user session\nconst userSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false,\n    user: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.status = 'loading';\n    }).addCase(login.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.isAuthenticated = true;\n      state.user = {\n        token: action.payload\n      };\n    }).addCase(login.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","login","email","password","rememberMe","rejectWithValue","response","accessToken","localStorage","setItem","error","data","userSlice","name","initialState","isAuthenticated","user","status","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","token","payload","rejected","actions","reducer"],"sources":["C:/Users/huber/Documents/Source/Proyectos/KeepCoding/React_Avanzado/react-practica-main/react-practica/src/redux/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { loginUser } from '../api/auth';\n\n// Async thunk to handle login\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password, rememberMe }, { rejectWithValue }) => {\n    try {\n      const response = await loginUser({ email, password });\n      const { accessToken } = response;\n      if (accessToken) {\n        if (rememberMe) {\n          localStorage.setItem('token', accessToken);\n        }\n        return accessToken;\n      }\n      return rejectWithValue('No access token received');\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Slice for user session\nconst userSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false,\n    user: null,\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      localStorage.removeItem('token');\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.isAuthenticated = true;\n        state.user = { token: action.payload };\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout } = userSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,SAAS,QAAQ,aAAa;;AAEvC;AACA,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CACnC,YAAY,EACZ,OAAO;EAAEG,KAAK;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC9D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAAC;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IACrD,MAAM;MAAEI;IAAY,CAAC,GAAGD,QAAQ;IAChC,IAAIC,WAAW,EAAE;MACf,IAAIH,UAAU,EAAE;QACdI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,WAAW,CAAC;MAC5C;MACA,OAAOA,WAAW;IACpB;IACA,OAAOF,eAAe,CAAC,0BAA0B,CAAC;EACpD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,OAAOL,eAAe,CAACK,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE;EACT,CAAC;EACDQ,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACL,eAAe,GAAG,KAAK;MAC7BK,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBR,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,KAAK,CAACwB,OAAO,EAAGL,KAAK,IAAK;MACjCA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDO,OAAO,CAACvB,KAAK,CAACyB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC3CP,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACL,eAAe,GAAG,IAAI;MAC5BK,KAAK,CAACJ,IAAI,GAAG;QAAEY,KAAK,EAAED,MAAM,CAACE;MAAQ,CAAC;IACxC,CAAC,CAAC,CACDL,OAAO,CAACvB,KAAK,CAAC6B,QAAQ,EAAE,CAACV,KAAK,EAAEO,MAAM,KAAK;MAC1CP,KAAK,CAACH,MAAM,GAAG,QAAQ;MACvBG,KAAK,CAACV,KAAK,GAAGiB,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGP,SAAS,CAACmB,OAAO;AAC3C,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}